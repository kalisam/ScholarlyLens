"""
Streamlit compatibility fixes
This module applies patches to resolve compatibility issues between Streamlit and other libraries
"""
import sys
import types
import logging

# Setup logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# List of problematic modules known to cause issues with Streamlit
PROBLEMATIC_MODULES = [
    'torch._classes',
    'google._upb._message',
    'plotly.matplotlylib',
    'tensorflow',
]

def create_module_stub(name):
    """Create a stub module that won't cause issues"""
    module = types.ModuleType(name)
    module.__path__ = []  # Add an empty __path__ to simulate a package
    module.__file__ = '<stub>'
    return module

def patch_torch():
    """Fix the PyTorch issue with Streamlit"""
    try:
        import torch
        
        # More aggressive patch for torch._classes
        class PathFix:
            def __init__(self):
                self._path = []
            
            def __iter__(self):
                return iter(self._path)
            
            def __getattr__(self, attr):
                return []
        
        class ClassesFix:
            def __init__(self):
                self.__path__ = PathFix()
                self.__file__ = '<torch_classes_stub>'
            
            def __getattr__(self, attr):
                if attr == '__path__':
                    return self.__path__
                # Return empty values for any attribute
                return None
        
        # Apply the patch by completely replacing the problematic module
        sys.modules['torch._classes'] = ClassesFix()
        logger.info("Applied improved PyTorch fix for Streamlit compatibility")
    except ImportError:
        # PyTorch not installed, no need to patch
        logger.info("PyTorch not installed, skipping patch")
        pass
    except Exception as e:
        logger.error(f"Error applying PyTorch patch: {str(e)}")

def fix_faiss_gpu():
    """
    Fix FAISS GPU issues by forcing CPU-only mode
    """
    try:
        # Set environment variable to disable GPU
        import os
        os.environ['USE_FAISS_CPU'] = '1'
        logger.info("Set FAISS to CPU-only mode")
    except Exception as e:
        logger.error(f"Error setting FAISS mode: {str(e)}")

def apply_fixes():
    """Apply all compatibility fixes"""
    logger.info("Applying Streamlit compatibility fixes...")
    
    # Apply PyTorch fix with more aggressive approach
    patch_torch()
    
    # Fix FAISS GPU issues
    fix_faiss_gpu()
    
    # Pre-create stubs for known problematic modules
    for module_name in PROBLEMATIC_MODULES:
        if module_name not in sys.modules:
            sys.modules[module_name] = create_module_stub(module_name)
    
    # Apply additional monkey patches to prevent Streamlit from inspecting problematic modules
    try:
        # Safer approach to handle torch._classes - handle it immediately even before import
        if 'torch' in sys.modules and '_classes' not in sys.modules['torch'].__dict__:
            sys.modules['torch']._classes = create_module_stub('torch._classes')
    except Exception as e:
        logger.error(f"Error in additional fixes: {str(e)}")
    
    logger.info("Streamlit compatibility fixes applied successfully")
    
    return True